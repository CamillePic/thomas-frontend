"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/checkout_sessions";
exports.ids = ["pages/api/checkout_sessions"];
exports.modules = {

/***/ "stripe":
/*!*************************!*\
  !*** external "stripe" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stripe");

/***/ }),

/***/ "(api)/./pages/api/checkout_sessions.js":
/*!****************************************!*\
  !*** ./pages/api/checkout_sessions.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n// const stripe = require(\"stripe\")(process.env.STRIPE_SECRET_KEY);\n// export default async function handler(req, res) {\n//   if (req.method === \"POST\") {\n//     try {\n//       // Retrieve the cart items from the request body\n//       const { cartItems } = req.body;\n//       // Create an array of line_items based on the cart items\n//       const line_items = cartItems.map((item) => ({\n//         price: item.price_id, // Replace with the correct price ID for your products\n//         quantity: item.quantity,\n//       }));\n//       // Create a session with the line_items\n//       const session = await stripe.checkout.sessions.create({\n//         payment_method_types: [\"card\"],\n//         line_items,\n//         mode: \"payment\",\n//         success_url: `${process.env.BASE_URL}/success?session_id={CHECKOUT_SESSION_ID}`,\n//         cancel_url: `${process.env.BASE_URL}/cancel`,\n//       });\n//       // Redirect the user to the Stripe Checkout page\n//       res.redirect(303, session.url);\n//     } catch (err) {\n//       console.error(err);\n//       res.status(err.statusCode || 500).json(err.message);\n//     }\n//   } else {\n//     res.setHeader(\"Allow\", \"POST\");\n//     res.status(405).end(\"Method Not Allowed\");\n//   }\n// }\n// Import required libraries and set up Stripe\nconst stripe = __webpack_require__(/*! stripe */ \"stripe\")(process.env.STRIPE_SECRET_KEY);\nasync function handler(req, res) {\n    if (req.method === \"POST\") {\n        try {\n            const { cartDetails  } = req.body;\n            console.log(\"====================================\");\n            console.log(Object.keys(cartDetails));\n            console.log(\"====================================\");\n            // console.log('====================================');\n            // console.log(\"price\", cartDetails[item].price_id);\n            // console.log('====================================');\n            if (!cartDetails) {\n                throw new Error(\"Cart is empty\");\n            }\n            // Create Checkout Session\n            const session = await stripe.checkout.sessions.create({\n                payment_method_types: [\n                    \"card\"\n                ],\n                line_items: Object.keys(cartDetails).map((item)=>({\n                        price: item,\n                        quantity: cartDetails[item].quantity\n                    })\n                ),\n                mode: \"payment\",\n                success_url: `${req.headers.origin}/success?session_id={CHECKOUT_SESSION_ID}`,\n                cancel_url: `${req.headers.origin}/cancel`\n            });\n            res.status(200).json({\n                sessionId: session.id\n            });\n        } catch (err) {\n            res.status(err.statusCode || 500).json(err.message);\n        }\n    } else {\n        res.setHeader(\"Allow\", \"POST\");\n        res.status(405).end(\"Method Not Allowed\");\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvY2hlY2tvdXRfc2Vzc2lvbnMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLG1FQUFtRTtBQUVuRSxvREFBb0Q7QUFDcEQsaUNBQWlDO0FBQ2pDLFlBQVk7QUFDWix5REFBeUQ7QUFDekQsd0NBQXdDO0FBRXhDLGlFQUFpRTtBQUNqRSxzREFBc0Q7QUFDdEQsdUZBQXVGO0FBQ3ZGLG1DQUFtQztBQUNuQyxhQUFhO0FBRWIsZ0RBQWdEO0FBQ2hELGdFQUFnRTtBQUNoRSwwQ0FBMEM7QUFDMUMsc0JBQXNCO0FBQ3RCLDJCQUEyQjtBQUMzQiwyRkFBMkY7QUFDM0Ysd0RBQXdEO0FBQ3hELFlBQVk7QUFFWix5REFBeUQ7QUFDekQsd0NBQXdDO0FBQ3hDLHNCQUFzQjtBQUN0Qiw0QkFBNEI7QUFDNUIsNkRBQTZEO0FBQzdELFFBQVE7QUFDUixhQUFhO0FBQ2Isc0NBQXNDO0FBQ3RDLGlEQUFpRDtBQUNqRCxNQUFNO0FBQ04sSUFBSTtBQUdKLDhDQUE4QztBQUM5QyxNQUFNQSxNQUFNLEdBQUdDLG1CQUFPLENBQUMsc0JBQVEsQ0FBQyxDQUFDQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsaUJBQWlCLENBQUM7QUFFaEQsZUFBZUMsT0FBTyxDQUFDQyxHQUFHLEVBQUVDLEdBQUcsRUFBRTtJQUM5QyxJQUFJRCxHQUFHLENBQUNFLE1BQU0sS0FBSyxNQUFNLEVBQUU7UUFDekIsSUFBSTtZQUNGLE1BQU0sRUFBRUMsV0FBVyxHQUFFLEdBQUdILEdBQUcsQ0FBQ0ksSUFBSTtZQUVoQ0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsc0NBQXNDLENBQUMsQ0FBQztZQUNwREQsT0FBTyxDQUFDQyxHQUFHLENBQUNDLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDTCxXQUFXLENBQUMsQ0FBQztZQUNyQ0UsT0FBTyxDQUFDQyxHQUFHLENBQUMsc0NBQXNDLENBQUMsQ0FBQztZQUNwRCx1REFBdUQ7WUFDdkQsb0RBQW9EO1lBQ3BELHVEQUF1RDtZQUV2RCxJQUFJLENBQUNILFdBQVcsRUFBRTtnQkFDaEIsTUFBTSxJQUFJTSxLQUFLLENBQUMsZUFBZSxDQUFDLENBQUM7YUFDbEM7WUFFRCwwQkFBMEI7WUFDMUIsTUFBTUMsT0FBTyxHQUFHLE1BQU1oQixNQUFNLENBQUNpQixRQUFRLENBQUNDLFFBQVEsQ0FBQ0MsTUFBTSxDQUFDO2dCQUNwREMsb0JBQW9CLEVBQUU7b0JBQUMsTUFBTTtpQkFBQztnQkFDOUJDLFVBQVUsRUFBRVIsTUFBTSxDQUFDQyxJQUFJLENBQUNMLFdBQVcsQ0FBQyxDQUFDYSxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxHQUFLLENBQUM7d0JBQ2xEQyxLQUFLLEVBQUVELElBQUk7d0JBQ1hFLFFBQVEsRUFBRWhCLFdBQVcsQ0FBQ2MsSUFBSSxDQUFDLENBQUNFLFFBQVE7cUJBQ3JDLENBQUM7Z0JBQUEsQ0FBQztnQkFDSEMsSUFBSSxFQUFFLFNBQVM7Z0JBQ2ZDLFdBQVcsRUFBRSxDQUFDLEVBQUVyQixHQUFHLENBQUNzQixPQUFPLENBQUNDLE1BQU0sQ0FBQyx5Q0FBeUMsQ0FBQztnQkFDN0VDLFVBQVUsRUFBRSxDQUFDLEVBQUV4QixHQUFHLENBQUNzQixPQUFPLENBQUNDLE1BQU0sQ0FBQyxPQUFPLENBQUM7YUFDM0MsQ0FBQztZQUVGdEIsR0FBRyxDQUFDd0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUM7Z0JBQUVDLFNBQVMsRUFBRWpCLE9BQU8sQ0FBQ2tCLEVBQUU7YUFBRSxDQUFDLENBQUM7U0FDakQsQ0FBQyxPQUFPQyxHQUFHLEVBQUU7WUFDWjVCLEdBQUcsQ0FBQ3dCLE1BQU0sQ0FBQ0ksR0FBRyxDQUFDQyxVQUFVLElBQUksR0FBRyxDQUFDLENBQUNKLElBQUksQ0FBQ0csR0FBRyxDQUFDRSxPQUFPLENBQUMsQ0FBQztTQUNyRDtLQUNGLE1BQU07UUFDTDlCLEdBQUcsQ0FBQytCLFNBQVMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDL0IvQixHQUFHLENBQUN3QixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNRLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO0tBQzNDO0NBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMtdGVtcGxhdGUvLi9wYWdlcy9hcGkvY2hlY2tvdXRfc2Vzc2lvbnMuanM/MDc5YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjb25zdCBzdHJpcGUgPSByZXF1aXJlKFwic3RyaXBlXCIpKHByb2Nlc3MuZW52LlNUUklQRV9TRUNSRVRfS0VZKTtcblxuLy8gZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuLy8gICBpZiAocmVxLm1ldGhvZCA9PT0gXCJQT1NUXCIpIHtcbi8vICAgICB0cnkge1xuLy8gICAgICAgLy8gUmV0cmlldmUgdGhlIGNhcnQgaXRlbXMgZnJvbSB0aGUgcmVxdWVzdCBib2R5XG4vLyAgICAgICBjb25zdCB7IGNhcnRJdGVtcyB9ID0gcmVxLmJvZHk7XG5cbi8vICAgICAgIC8vIENyZWF0ZSBhbiBhcnJheSBvZiBsaW5lX2l0ZW1zIGJhc2VkIG9uIHRoZSBjYXJ0IGl0ZW1zXG4vLyAgICAgICBjb25zdCBsaW5lX2l0ZW1zID0gY2FydEl0ZW1zLm1hcCgoaXRlbSkgPT4gKHtcbi8vICAgICAgICAgcHJpY2U6IGl0ZW0ucHJpY2VfaWQsIC8vIFJlcGxhY2Ugd2l0aCB0aGUgY29ycmVjdCBwcmljZSBJRCBmb3IgeW91ciBwcm9kdWN0c1xuLy8gICAgICAgICBxdWFudGl0eTogaXRlbS5xdWFudGl0eSxcbi8vICAgICAgIH0pKTtcblxuLy8gICAgICAgLy8gQ3JlYXRlIGEgc2Vzc2lvbiB3aXRoIHRoZSBsaW5lX2l0ZW1zXG4vLyAgICAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgc3RyaXBlLmNoZWNrb3V0LnNlc3Npb25zLmNyZWF0ZSh7XG4vLyAgICAgICAgIHBheW1lbnRfbWV0aG9kX3R5cGVzOiBbXCJjYXJkXCJdLFxuLy8gICAgICAgICBsaW5lX2l0ZW1zLFxuLy8gICAgICAgICBtb2RlOiBcInBheW1lbnRcIixcbi8vICAgICAgICAgc3VjY2Vzc191cmw6IGAke3Byb2Nlc3MuZW52LkJBU0VfVVJMfS9zdWNjZXNzP3Nlc3Npb25faWQ9e0NIRUNLT1VUX1NFU1NJT05fSUR9YCxcbi8vICAgICAgICAgY2FuY2VsX3VybDogYCR7cHJvY2Vzcy5lbnYuQkFTRV9VUkx9L2NhbmNlbGAsXG4vLyAgICAgICB9KTtcblxuLy8gICAgICAgLy8gUmVkaXJlY3QgdGhlIHVzZXIgdG8gdGhlIFN0cmlwZSBDaGVja291dCBwYWdlXG4vLyAgICAgICByZXMucmVkaXJlY3QoMzAzLCBzZXNzaW9uLnVybCk7XG4vLyAgICAgfSBjYXRjaCAoZXJyKSB7XG4vLyAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4vLyAgICAgICByZXMuc3RhdHVzKGVyci5zdGF0dXNDb2RlIHx8IDUwMCkuanNvbihlcnIubWVzc2FnZSk7XG4vLyAgICAgfVxuLy8gICB9IGVsc2Uge1xuLy8gICAgIHJlcy5zZXRIZWFkZXIoXCJBbGxvd1wiLCBcIlBPU1RcIik7XG4vLyAgICAgcmVzLnN0YXR1cyg0MDUpLmVuZChcIk1ldGhvZCBOb3QgQWxsb3dlZFwiKTtcbi8vICAgfVxuLy8gfVxuXG5cbi8vIEltcG9ydCByZXF1aXJlZCBsaWJyYXJpZXMgYW5kIHNldCB1cCBTdHJpcGVcbmNvbnN0IHN0cmlwZSA9IHJlcXVpcmUoJ3N0cmlwZScpKHByb2Nlc3MuZW52LlNUUklQRV9TRUNSRVRfS0VZKTtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuICBpZiAocmVxLm1ldGhvZCA9PT0gJ1BPU1QnKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHsgY2FydERldGFpbHMgfSA9IHJlcS5ib2R5O1xuXG4gICAgICBjb25zb2xlLmxvZygnPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Jyk7XG4gICAgICBjb25zb2xlLmxvZyhPYmplY3Qua2V5cyhjYXJ0RGV0YWlscykpXG4gICAgICBjb25zb2xlLmxvZygnPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Jyk7XG4gICAgICAvLyBjb25zb2xlLmxvZygnPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Jyk7XG4gICAgICAvLyBjb25zb2xlLmxvZyhcInByaWNlXCIsIGNhcnREZXRhaWxzW2l0ZW1dLnByaWNlX2lkKTtcbiAgICAgIC8vIGNvbnNvbGUubG9nKCc9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0nKTtcblxuICAgICAgaWYgKCFjYXJ0RGV0YWlscykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NhcnQgaXMgZW1wdHknKTtcbiAgICAgIH1cblxuICAgICAgLy8gQ3JlYXRlIENoZWNrb3V0IFNlc3Npb25cbiAgICAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBzdHJpcGUuY2hlY2tvdXQuc2Vzc2lvbnMuY3JlYXRlKHtcbiAgICAgICAgcGF5bWVudF9tZXRob2RfdHlwZXM6IFsnY2FyZCddLFxuICAgICAgICBsaW5lX2l0ZW1zOiBPYmplY3Qua2V5cyhjYXJ0RGV0YWlscykubWFwKChpdGVtKSA9PiAoe1xuICAgICAgICAgIHByaWNlOiBpdGVtLCAvLyBVc2UgdGhlIGl0ZW0ga2V5IChwcmljZV9pZCkgZGlyZWN0bHlcbiAgICAgICAgICBxdWFudGl0eTogY2FydERldGFpbHNbaXRlbV0ucXVhbnRpdHksIC8vIEFjY2VzcyBxdWFudGl0eSBkaXJlY3RseVxuICAgICAgICB9KSksXG4gICAgICAgIG1vZGU6ICdwYXltZW50JyxcbiAgICAgICAgc3VjY2Vzc191cmw6IGAke3JlcS5oZWFkZXJzLm9yaWdpbn0vc3VjY2Vzcz9zZXNzaW9uX2lkPXtDSEVDS09VVF9TRVNTSU9OX0lEfWAsXG4gICAgICAgIGNhbmNlbF91cmw6IGAke3JlcS5oZWFkZXJzLm9yaWdpbn0vY2FuY2VsYCxcbiAgICAgIH0pO1xuXG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IHNlc3Npb25JZDogc2Vzc2lvbi5pZCB9KTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHJlcy5zdGF0dXMoZXJyLnN0YXR1c0NvZGUgfHwgNTAwKS5qc29uKGVyci5tZXNzYWdlKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmVzLnNldEhlYWRlcignQWxsb3cnLCAnUE9TVCcpO1xuICAgIHJlcy5zdGF0dXMoNDA1KS5lbmQoJ01ldGhvZCBOb3QgQWxsb3dlZCcpO1xuICB9XG59XG5cbiJdLCJuYW1lcyI6WyJzdHJpcGUiLCJyZXF1aXJlIiwicHJvY2VzcyIsImVudiIsIlNUUklQRV9TRUNSRVRfS0VZIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsImNhcnREZXRhaWxzIiwiYm9keSIsImNvbnNvbGUiLCJsb2ciLCJPYmplY3QiLCJrZXlzIiwiRXJyb3IiLCJzZXNzaW9uIiwiY2hlY2tvdXQiLCJzZXNzaW9ucyIsImNyZWF0ZSIsInBheW1lbnRfbWV0aG9kX3R5cGVzIiwibGluZV9pdGVtcyIsIm1hcCIsIml0ZW0iLCJwcmljZSIsInF1YW50aXR5IiwibW9kZSIsInN1Y2Nlc3NfdXJsIiwiaGVhZGVycyIsIm9yaWdpbiIsImNhbmNlbF91cmwiLCJzdGF0dXMiLCJqc29uIiwic2Vzc2lvbklkIiwiaWQiLCJlcnIiLCJzdGF0dXNDb2RlIiwibWVzc2FnZSIsInNldEhlYWRlciIsImVuZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/checkout_sessions.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/checkout_sessions.js"));
module.exports = __webpack_exports__;

})();